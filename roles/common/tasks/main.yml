---
- name: Install unattended-upgrades
  apt:
    name: unattended-upgrades
    state: latest

- name: Configure unattended-upgrades
  template:
    src: 50unattended-upgrades.j2
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    owner: root
    group: root
    mode: 0644

- name: Periodic upgrades configured
  template:
    src: 10periodic.j2
    dest: /etc/apt/apt.conf.d/10periodic
    owner: root
    group: root
    mode: 0644

- name: Unattended reboots configured
  template:
    src: 60unattended-reboot.j2
    dest: /etc/apt/apt.conf.d/60unattended-reboot
    owner: root
    group: root
    mode: 0644

- name: Disable MOTD on login and SSHD
  replace: dest="{{ item.file }}" regexp="{{ item.regexp }}" replace="{{ item.line }}"
  with_items:
    - { regexp: '^session.*optional.*pam_motd.so.*', line: '# MOTD DISABLED', file: '/etc/pam.d/login' }
    - { regexp: '^session.*optional.*pam_motd.so.*', line: '# MOTD DISABLED', file: '/etc/pam.d/sshd' }

- name: Loopback for services configured
  template:
    src: 10-algo-lo100.network.j2
    dest: /etc/systemd/network/10-algo-lo100.network
  notify:
    - restart systemd-networkd

- name: systemd services enabled and started
  systemd:
    name: "{{ item }}"
    state: started
    enabled: true
    daemon_reload: true
  with_items:
    - systemd-networkd
    - systemd-resolved

- meta: flush_handlers

- name: Check apparmor support
  shell: apparmor_status
  ignore_errors: yes
  register: apparmor_status

- set_fact:
    apparmor_enabled: true
  when: '"profiles are in enforce mode" in apparmor_status.stdout'

- name: Gather additional facts
  import_tasks: facts.yml

- set_fact:
    tools:
      - git
      - screen
      - apparmor-utils
      - uuid-runtime
      - coreutils
      - iptables-persistent
      - cgroup-tools
      - openssl
    sysctl:
      - item: net.ipv4.ip_forward
        value: 1
      - item: net.ipv4.conf.all.forwarding
        value: 1
      - item: "{{ 'net.ipv6.conf.all.forwarding' if ipv6_support else none }}"
        value: 1

- name: Install tools
  apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - "{{ tools|default([]) }}"

- name: Install headers
  apt:
    name:
      - linux-headers-generic
      - "linux-headers-{{ ansible_kernel }}"
    state: present
  when: install_headers

- name: Iptables configured
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - { src: rules.v4.j2, dest: /etc/iptables/rules.v4 }
  notify:
    - restart iptables

- name: Iptables configured
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  when: ipv6_support
  with_items:
    - { src: rules.v6.j2, dest: /etc/iptables/rules.v6 }
  notify:
    - restart iptables

- name: Sysctl tuning
  sysctl: name="{{ item.item }}" value="{{ item.value }}"
  when: item.item != ""
  with_items:
    - "{{ sysctl|default([]) }}"
  tags:
    - always

- meta: flush_handlers
rescue:
  - debug: var=fail_hint
    tags: always
  - fail:
    tags: always
