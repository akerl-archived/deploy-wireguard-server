---
- name: Register all peers
  set_fact:
    peers:
      - "{{ users }}"
      - "{{ server_ip }}"

- name: Ensure the required directories exist
  file:
    dest: "{{ wireguard_pki_path }}/{{ item }}"
    state: directory
    recurse: true
  loop:
    - private
    - public

- name: Generate private keys
  command: wg genkey
  register: wg_genkey
  no_log: true
  loop: "{{ peers }}"

- name: Save private keys
  copy:
    dest: "{{ wireguard_pki_path }}/private/{{ item['item'] }}"
    content: "{{ item['stdout'] }}"
    mode: "0600"
  no_log: true
  loop: "{{ wg_genkey['results'] }}"

- name: Generate public keys
  command: wg pubkey
  register: wg_pubkey
  args:
    stdin: "{{ wg_genkey['results'][index]['stdout'] }}"
  no_log: true
  loop: "{{ peers }}"
  loop_control:
    index_var: index

- name: Save public keys
  copy:
    dest: "{{ wireguard_pki_path }}/public/{{ item['item'] }}"
    content: "{{ item['stdout'] }}"
    mode: "0600"
  no_log: true
  loop: "{{ wg_pubkey['results'] }}"

- name: WireGuard users config generated
  template:
    src: client.conf.j2
    dest: "{{ wireguard_config_path }}/{{ item[0]['item'] }}.conf"
    mode: "0600"
  no_log: true
  loop: "{{ wg_genkey['results']|zip(wg_pubkey['results'])|list }}"
  loop_control:
    index_var: index

- name: Generate QR codes
  command: segno --scale=5 --output={{ item[0][index]['item'] }}.png "{{ lookup('template', 'client.conf.j2') }}"
  no_log: true
  loop: "{{ wg_genkey['results']|zip(wg_pubkey['results'])|list }}"
  loop_control:
    index_var: index
  args:
    chdir: "{{ wireguard_config_path }}"

- name: WireGuard configured
  template:
    src: server.conf.j2
    dest: "/etc/wireguard/{{ wireguard_interface }}.conf"
    mode: "0600"
  notify: restart wireguard

- name: WireGuard enabled and started
  service:
    name: "{{ service_name }}"
    state: started
    enabled: true

- meta: flush_handlers

